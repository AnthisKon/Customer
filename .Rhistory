summarise(Frequency = n(),
Last_pay = max(payment_made),
due = sum(total_due),
Monetary = sum(total_paid),
max_paid = max(total_paid),
max_due = max(total_due),
per = max(period_id),
paid_buckets = cut(Monetary, c(0,40,80,150,500,100000)),
Last_pay = max(dmy(payment_made)),
First_pay = min(dmy(payment_made)),
Recency = difftime(today , max(payment_made) , units = c("days")))
Customer <- gousto %>%
group_by(user_id) %>%
summarise(Frequency = n(),
due = sum(total_due),
Monetary = sum(total_paid),
max_paid = max(total_paid),
max_due = max(total_due),
per = max(period_id),
Last_pay = max(dmy(payment_made)),
First_pay = min(dmy(payment_made)))
time_1 = Sys.time()
Customer <- gousto %>%
group_by(user_id) %>%
summarise(Frequency = n(),
due = sum(total_due),
Monetary = sum(total_paid),
max_paid = max(total_paid),
max_due = max(total_due),
per = max(period_id),
Last_pay = max(dmy(payment_made)),
First_pay = min(dmy(payment_made)))
gousto %>%
group_by(user_id) %>%
summarise(Frequency = n(),
Last_pay = max(dmy(payment_made)),
First_pay = min(dmy(payment_made)))
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(tidyverse)
library(lubridate)
library(plotly)
gousto <- fread("orders.csv" )
today = dmy('01-01-2017')
Customer <- gousto %>%
mutate(payment_made = dmy(payment_made)) %>%
group_by(user_id) %>%
summarise(Frequency = n(),
Last_pay = max(payment_made),
First_pay = min(payment_made),
Recency = difftime(today , max(payment_made) , units = c("days")),
Paid = sum(total_paid),
Due = sum(total_due),
Max_Paid = max(total_paid),
Max_Due = max(total_due),
Avg_Paid = mean(total_paid),
Avg_due = mean(total_due)
)
Customer %>%
group_by(First = year(First_pay),
Last = year(Last_pay)) %>%
summarise( Customers = n())
Customer
Customer %>% ggplot(aes(x = Paid, y = Recency))+geom_jitter()
Customer %>% ggplot(aes(x = Paid, y = Frequency))+geom_jitter()
Customer %>%
ggplot(aes(x = Paid,
y = Frequency))+
geom_jitter() +
theme_minimal()
Customer %>% mutate(test = ifelse(year(First_pay) < year(Last_pay)),1,0)
Customer %>% mutate(test = ifelse(year(First_pay) < year(Last_pay),1,0))
Customer %>% mutate(Bought_Again = ifelse(year(First_pay) < year(Last_pay),1,0)) %>%
ggplot(aes(x = Paid,
y = Frequency,
colour = Bought_Again)) +
geom_jitter() +
theme_minimal() +
Customer %>% mutate(Bought_Again = ifelse(year(First_pay) < year(Last_pay),1,0)) %>%
ggplot(aes(x = Paid,
y = Frequency,
color = Bought_Again)) +
geom_jitter() +
theme_minimal() +
Customer %>% mutate(Bought_Again = ifelse(year(First_pay) < year(Last_pay),1,0)) %>%
ggplot(aes(x = Paid,
y = Frequency,
color = Bought_Again)) +
geom_jitter() +
theme_minimal()
Customer %>% mutate(Bought_Again = ifelse(year(First_pay) < year(Last_pay),1,0)) %>%
ggplot(aes(x = Paid,
y = Frequency,
color = facotr(Bought_Again))) +
geom_jitter() +
theme_minimal()
Customer %>% mutate(Bought_Again = ifelse(year(First_pay) < year(Last_pay),1,0)) %>%
ggplot(aes(x = Paid,
y = Frequency,
color = factor(Bought_Again))) +
geom_jitter() +
theme_minimal()
Customer %>% mutate(Bought_Again = ifelse((year(First_pay) < year(Last_pay)),1,0)) %>% group_by(factor(Bought_Again)) %>% summarise(n())
Customer %>% mutate(Bought_Again = ifelse((year(First_pay) < year(Last_pay)),1,0))  %>%
ggplot(aes(x = Paid,
y = Frequency,
color = factor(Bought_Again))) +
geom_jitter() +
theme_minimal()
Customer %>% mutate(Bought_Again = ifelse((year(First_pay) < year(Last_pay)),1,0))  %>%
ggplot(aes(x = Paid,
y = Frequency,
color = factor(Bought_Again))) +
geom_jitter(alpha = 0.2) +
theme_minimal()
Customer %>% mutate(Bought_Again = ifelse((year(First_pay) < year(Last_pay)),'YES',"NO"))  %>%
ggplot(aes(x = Paid,
y = Frequency,
color = factor(Bought_Again))) +
geom_jitter(alpha = 0.2) +
theme_minimal()
Customer %>% mutate(Bought_Again = ifelse((year(First_pay) < year(Last_pay)),'YES',"NO"))  %>%
ggplot(aes(x = Paid,
y = Frequency,
color = factor(Bought_Again)))+
geom_jitter(alpha = 0.1) +
theme_minimal()
Customer %>% mutate(Bought_Again = ifelse((year(First_pay) < year(Last_pay)),'YES',"NO"))  %>%
ggplot(aes(x = Paid,
y = Frequency,
color = factor(Bought_Again)))+
geom_jitter(alpha = 0.1) +
theme_minimal() +
scale_color_brewer(palette = 'Set1')
Customer <- gousto %>%
mutate(payment_made = dmy(payment_made)) %>%
group_by(user_id) %>%
summarise(Frequency = n(),
Last_pay = max(payment_made),
First_pay = min(payment_made),
Recency = difftime(today , max(payment_made) , units = c("days")),
Paid = sum(total_paid),
Due = sum(total_due),
Max_Paid = max(total_paid),
Max_Due = max(total_due),
Avg_Paid = mean(total_paid),
Avg_due = mean(total_due),
Purchased_Again = ifelse((year(First_pay) < year(Last_pay)),'YES',"NO")
)
Customer  %>%
ggplot(aes(x = Paid,
y = Frequency,
color = Purchased_Again))+
geom_jitter(alpha = 0.1) +
theme_minimal() +
scale_color_brewer(palette = 'Set1') +
ggtitle("Frequent Customer's monetary value")
Customer  %>%
ggplot(aes(x = Paid,
y = Frequency,
color = Purchased_Again))+
geom_jitter(alpha = 0.1) +
theme_minimal() +
scale_color_brewer(palette = 'Set1') +
ggtitle("Frequent Customer's monetary value") +
theme(plot.title = element_text(hjust = 0.5))
Customer  %>%
ggplot(aes(x = Paid,
y = Recency,
color = Purchased_Again))+
geom_jitter(alpha = 0.1) +
theme_minimal() +
scale_color_brewer(palette = 'Set1') +
ggtitle("Frequent Customer's monetary value") +
theme(plot.title = element_text(hjust = 0.5))
Customer  %>%
ggplot(aes(x = Paid,
y = as.numeric(Recency),
color = Purchased_Again))+
geom_jitter(alpha = 0.1) +
theme_minimal() +
scale_color_brewer(palette = 'Set1') +
ggtitle("Frequent Customer's monetary value") +
theme(plot.title = element_text(hjust = 0.5))
Customer  %>%
ggplot(aes(x = Paid,
y = as.numeric(Recency),
color = Purchased_Again))+
geom_jitter(alpha = 0.1) +
theme_minimal() +
scale_color_brewer(palette = 'Set1') +
ggtitle("High Monetary valuy Custs purchased recently") +
theme(plot.title = element_text(hjust = 0.5))
Customer
Customer  %>%
ggplot(aes(x = Frequency,
y = as.numeric(Recency),
color = Purchased_Again))+
geom_jitter(alpha = 0.1) +
theme_minimal() +
scale_color_brewer(palette = 'Set1') +
ggtitle("High Monetary value Custs purchased recently") +
theme(plot.title = element_text(hjust = 0.5))
Customer
gousto = gousto %>% mutate(payment_made = dmy(payment_made))
gousto  %>%
group_by(year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid))
Customer %>%
group_by(First = year(First_pay),
Last = year(Last_pay)) %>%
summarise( Customers = n())
gousto
gousto  %>%
group_by(year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due))
gousto
gousto  %>%
group_by(year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due))
gousto  %>%
group_by(year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due))
gousto  %>%
group_by(Year = year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due)) %>%
ggplot() %>% geom_line(aes(x = factor(Year), y = Avg_Paid))
gousto  %>%
group_by(Year = year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due)) %>%
ggplot() + geom_line(aes(x = factor(Year), y = Avg_Paid))
gousto  %>%
group_by(Year = year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due)) %>%
ggplot() + geom_bar(aes(x = factor(Year), y = Avg_Paid))
gousto  %>% ggplot() + geom_bar(aes(x = factor(year(payment_made)), y = total_paid))
gousto  %>% ggplot() + geom_line(aes(x = factor(year(payment_made)), y = total_paid))
gousto  %>%
group_by(Year = year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due)) %>%
gather(key,value, Avg_Paid, Avg_Due) %>%
ggplot(aes(x=Year, y=value, colour=key)) +
geom_line()
gousto  %>%
group_by(Year = year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due)) %>%
gather(key,value, Avg_Paid, Avg_Due) %>%
ggplot(aes(x=factor(Year), y=value, colour=key)) +
geom_line()
gousto  %>%
group_by(Year = year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due)) %>%
gather(key,value, Avg_Paid, Avg_Due) %>%
ggplot(aes(x=factor(Year), y=value, colour=key)) +
geom_line(aes(group = 1))
gousto  %>%
group_by(Year = year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due)) %>%
gather(key,value, Avg_Paid, Avg_Due) %>%
ggplot(aes(x=factor(Year), y=value, colour=key)) +
geom_line(aes(group = 2))
gousto  %>%
group_by(Year = year(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due))
gousto  %>%
group_by(Year = month(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due))
gousto  %>%
group_by(Year = day(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due))
gousto  %>%
group_by(Year = weekday(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due))
gousto  %>%
group_by(Year = weekdays(payment_made)) %>%
summarise(Orders = n(),
Avg_Paid = mean(total_paid),
Avg_Due = mean(total_due),
Paid = sum(total_paid),
Due = sum(total_due))
Customer %>%
group_by(First = year(First_pay),
Last = year(Last_pay),
First_m = month(First_pay),
Last_m = month(Last_pay)) %>%
summarise( Customers = n())
Customer %>% difftime(Last_pay,First_pay, c("days"))
Last_pay
Customer %>% mutate(Churned = difftime(Last_pay, First_pay, c("days")))
Customer %>% mutate(Churned = difftime(Last_pay, First_pay, c("months")))
Customer %>% mutate(Churned = difftime(Last_pay, First_pay, c("days")))
Customer %>% mutate(Churned = difftime(Last_pay, First_pay, c("days"))) %>% filter(Churned == 0)
Customer %>% mutate(Churned = difftime(Last_pay, First_pay, c("days"))) %>% filter(Churned != 0)
Customer %>% mutate(Churned = difftime(Last_pay, First_pay, c("days"))) %>% filter(Paid >Due 0)
Customer %>% mutate(Churned = difftime(Last_pay, First_pay, c("days"))) %>% filter(Paid > Due 0)
Customer %>% mutate(Churned = difftime(Last_pay, First_pay, c("days"))) %>% filter(Paid > Due )
Customer %>% mutate(Churned = difftime(Last_pay, First_pay, c("days"))) %>% filter(Paid > Due & Churned !=0)
Customer <- gousto %>%
group_by(user_id) %>%
summarise(Frequency = n(),
Last_pay = max(payment_made),
First_pay = min(payment_made),
Recency = difftime(today , max(payment_made) , units = c("days")),
Paid = sum(total_paid),
Due = sum(total_due),
Max_Paid = max(total_paid),
Max_Due = max(total_due),
Avg_Paid = mean(total_paid),
Avg_due = mean(total_due),
Purchased_Again = ifelse((year(First_pay) < year(Last_pay)),'YES',"NO"),
Churned = difftime(Last_pay, First_pay, c("days")),
Diff = Paid - Due
)
Customer %>% ggplot(aes( x = Churned, y = Diff))+geom_jitter()
Customer %>% ggplot(aes( x = Churned, y = Frequency))+geom_jitter()
Customer %>% ggplot(aes( x = Frequency, y = Diff))+geom_jitter()
Customer %>% ggplot(aes( x = Frequency, y = Diff, color = Churned))+geom_jitter()
Customer %>% ggplot(aes( x = Frequency, y = Diff, color = numeric(Churned)))+geom_jitter()
Customer %>% ggplot(aes( x = Frequency, y = Diff, color = Purchased_Again))+geom_jitter()
Customer
Customer %>% ggplot(aes( x = Frequency, y = Diff, color = as.numeric(Churned)))+geom_jitter()
Customer %>% ggplot(aes( x = Frequency, y = Diff, color = year(Last_pay)))+geom_jitter()
Customer %>%
ggplot(aes( x = Frequency,
y = Diff,
color = factor(year(Last_pay)))) +
geom_jitter()
Customer %>%
ggplot(aes( x = Frequency,
y = Diff,
color = factor(year(First_pay)))) +
geom_jitter()
Customer %>%
ggplot(aes( x = Frequency,
y = Diff,
color = factor(month(First_pay)))) +
geom_jitter()
Customer
Customer %>%
ggplot(aes( x = Frequency,
y = Diff)) +
geom_jitter()
Customer %>% filter(Diff > 500 & Frequency> 90)
Customer
Customer %>% filter(Churned <=30)
Customer <- gousto %>%
group_by(user_id) %>%
summarise(Frequency = n(),
Last_pay = max(payment_made),
First_pay = min(payment_made),
Recency = difftime(today , max(payment_made) , units = c("days")),
Paid = sum(total_paid),
Due = sum(total_due),
Max_Paid = max(total_paid),
Max_Due = max(total_due),
Avg_Paid = mean(total_paid),
Avg_due = mean(total_due),
Purchased_Again = ifelse((year(First_pay) < year(Last_pay)),'YES',"NO"),
Churned = difftime(Last_pay, First_pay, c("days")),
Diff = Paid - Due,
Same_month_churned = ifelse(Churned <=  30, "1",'0' )
)
Customer %>%
ggplot(aes( x = Frequency,
y = Diff,
color = Same_month_churned)) +
geom_jitter()
Customer %>%
ggplot(aes( x = Paid,
y = Diff,
color = Same_month_churned)) +
geom_jitter()
Customer %>%
ggplot(aes( x = Avg_Paid,
y = Diff,
color = Same_month_churned)) +
geom_jitter()
Customer %>%
ggplot(aes( x = month(First_pay),
y = Diff,
color = Same_month_churned)) +
geom_jitter()
Customer %>%
ggplot(aes( x = factor(month(First_pay)),
y = Diff,
color = Same_month_churned)) +
geom_jitter()
Customer %>%
ggplot(aes( x = factor(weekdays(First_pay)),
y = Diff,
color = Same_month_churned)) +
geom_jitter()
Customer %>%
ggplot(aes( x = Tenure,
y = Diff,
color = Same_month_churned)) +
geom_jitter()
Customer <- gousto %>%
group_by(user_id) %>%
summarise(Frequency = n(),
Last_pay = max(payment_made),
First_pay = min(payment_made),
Recency = difftime(today , max(payment_made) , units = c("days")),
Paid = sum(total_paid),
Due = sum(total_due),
Max_Paid = max(total_paid),
Max_Due = max(total_due),
Avg_Paid = mean(total_paid),
Avg_due = mean(total_due),
Purchased_Again = ifelse((year(First_pay) < year(Last_pay)),'YES',"NO"),
Tenure = difftime(Last_pay, First_pay, c("days")),
Diff = Paid - Due,
Same_month_churn = ifelse(Tenure <=  30, "1",'0' )
)
Customer %>%
group_by(First = year(First_pay),
Last = year(Last_pay),
First_m = year(First_pay),
Last_m = year(Last_pay)) %>%
summarise( Customers = n())
Customer %>%
group_by(First = year(First_pay),
Last = year(Last_pay),
First_m = month(First_pay),
Last_m = month(Last_pay)) %>%
summarise( Customers = n())
Customer %>% mutate(test = cut(Tenure,c(0,30,60,90,120,150,180,210,240,270,300,100000)))
Customer %>% mutate(test = cut(as.numeric(Tenure),c(0,30,60,90,120,150,180,210,240,270,300,100000)))
Customer %>% mutate(test = as.numeric(Tenure))
Customer %>% mutate(test = cut(as.numeric(Tenure),c(-1,30,60,90,120,150,180,210,240,270,300,100000)))
Customer %>% mutate(test = cut(as.numeric(Tenure),c(-1,30,60,90,120,150,180,210,240,270,300,100000))) %>% group_by(test) %>% summarise(n())
Customer %>% mutate(test = cut(as.numeric(Tenure),c(-1,30,60,90,120,150,180,210,240,270,300,100000))) %>% group_by(test) %>% summarise(N = n()) %>% mutate(Cumu = cumsum(N))
Customer %>% mutate(test = cut(as.numeric(Tenure),c(-1,30,60,90,120,150,180,210,240,270,300,100000))) %>% group_by(test) %>% summarise(N = n()) %>% mutate(Cumu = cumsum(N)) %>% mutate(Percentage = Cumu/sum(Cumu))
Customer %>% mutate(test = cut(as.numeric(Tenure),c(-1,30,60,90,120,150,180,210,240,270,300,100000000))) %>% group_by(test) %>% summarise(N = n()) %>% mutate(Cumu = cumsum(N)) %>% mutate(Percentage = Cumu/sum(Cumu))
Customer %>% mutate(test = cut(as.numeric(Tenure),c(-1,30,60,90,120,150,180,210,240,270,300,100000000))) %>% group_by(test) %>% summarise(N = n()) %>% mutate(Cumu = cumsum(N)) %>% mutate(Percentage = (Cumu/sum(Cumu))*100)
Customer %>%
mutate(test = cut(as.numeric(Tenure),c(-1,30,60,90,120,150,180,210,240,270,300,100000000))) %>% group_by(test) %>%
summarise(N = n()) %>%
mutate(Cumu = cumsum(N)) %>%
mutate(Percentage = (Cumu/sum(N))*100)
Customer %>% filter(First_pay < '01-01-2016')
Customer %>% filter(First_pay < dmy('01-01-2016') )
Customer %>% filter(First_pay < dmy('01-01-2016') ) %>%
mutate(test = cut(as.numeric(Tenure),
c(-1,30,60,90,120,150,180,210,240,270,300,100000000))) %>%
group_by(test) %>%
summarise(N = n()) %>%
mutate(Cumu = cumsum(N)) %>%
mutate(Percentage = (Cumu/sum(N))*100)
Customer %>% summarise(max(First_pay), max(Last_pay))
Customer %>% filter(First_pay < dmy('01-11-2015') ) %>%
mutate(test = cut(as.numeric(Tenure),
c(-1,30,60,90,120,150,180,210,240,270,300,100000000))) %>%
group_by(test) %>%
summarise(N = n()) %>%
mutate(Cumu = cumsum(N)) %>%
mutate(Percentage = (Cumu/sum(N))*100)
